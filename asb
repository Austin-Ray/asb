#!/bin/bash
COMMAND=$1
PACKAGE=$2

# Some packages are part of larger packages e.g. gvim is part of vim
BASE_PACKAGE="$(asp list-repos "$PACKAGE" | grep '==>' | cut -d' ' -f7)"

if [ "$BASE_PACKAGE" == '' ]; then
  BASE_PACKAGE="$PACKAGE"
fi

# TODO: Change this to handle user preferrence
ASB_STORAGE_LOC="$HOME/builds"
OUTPUT_DIR="$ASB_STORAGE_LOC/packages"

main() {
  if [ "$COMMAND" == "install" ]; then
    install_package
  elif [ "$COMMAND" == "update" ]; then
    update_package
  elif [ "$COMMAND" == "remove" ]; then
    remove_package
  else 
    echo "Invalid command"
  fi
}

install_package () {
  (asp checkout "$PACKAGE" && {  
    move_git_repo
    navigate_to_dir
    build_package
  } ) || {
    update_package
  }
}

update_package () {
    asp update "$PACKAGE" &> /dev/null
  
    echo "UPDATE"
    navigate_to_dir
    build_package
}

remove_package () {
  # Notify the user that pacman is being run with sudo
  echo "Launching pacman -R with sudo"

  # Remove the package from pacman
  sudo pacman -R "$PACKAGE"

  # Clean up the output directory by removing git directory and any build packages
  rm -rf "${OUTPUT_DIR:?}/$PACKAGE"
  rm -rf "${ASB_STORAGE_LOC:?}/$PACKAGE"
}

# Navigate to the appropriate directory for building
navigate_to_dir () {
  # Does not support testing repository at the moment
  # TODO: Include support for testing
  REPO=$(asp list-repos "$PACKAGE" | grep "core\|extra\|community\|multilib")
  cd "$ASB_STORAGE_LOC/$BASE_PACKAGE/repos/$REPO-x86_64" || return
}

# ASP doesn't support changing where the files are cloned so they have to be moved
# to prevent cluttering up wherever the command was executed from.
move_git_repo () {
  mv "$BASE_PACKAGE" "$ASB_STORAGE_LOC/$BASE_PACKAGE"
}

build_package () {
  OLD_PKGDEST="$PKGDEST"
  export PKGDEST="$OUTPUT_DIR/$PACKAGE" 
  mkdir -p "$PKGDEST"

  # Download the dependencies, build the package, and clean up afterwards
  # Do not install at this point. This is still a very simple script so installing
  # can be dangerous until the script has been refined.
  # TODO: Change this to allow more configuration
  makepkg -sc || {
    echo "Package has already been compiled. Would you like to recompile? [Y/n]"
    read -r CHOICE

    case $CHOICE in 
      'Y' | 'y' | '') makepkg -scf;;
      *) return 1;;
    esac;
  }

  export PKGDEST="$OLD_PKGDEST"
}

main "$@"
